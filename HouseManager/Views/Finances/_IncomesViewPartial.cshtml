@inject IHttpContextAccessor HttpContextAccessor

@model IncomesPageViewModel

@{
	var collection = Model.Collection;
	var houseOrgId = HttpContextAccessor?.HttpContext?.Session.GetInt32(HouseOrgId);
}
<div class="card border-2 p-0 mb-3 col-12">
	<h4 class="card-header p-2 text-center">Incomes</h4>
	<div class="card-body mx-0">
		<div class="table-responsive">
			<table class="table table-bordered table-hover">
				<thead>
					<tr class="text-center border-2 align-middle bg-light">
						<th style="width: 5%" scope="col">#</th>
						<th style="width: 34%" scope="col">Description</th>
						<th style="width: 10%" scope="col">Amount</th>
						<th style="width: 20%" scope="col">Date</th>
						<th style="width: 10%" scope="col">Unit</th>
					</tr>
				</thead>
				<tbody class="align-middle">
					@for (int i = 0; i < collection.Count; i++)
					{
						<tr class="text-center border-2 bg-white p-0">
							<td class="bg-light p-1" scope="row">@(i + 1 + (Model.CurrentPage - 1) * Model.ElementsPerPage)</td>
							<td class="p-1">@collection[i].Description</td>
							<td class="p-1">@collection[i].Amount</td>
							<td class="p-1">@collection[i].Date</td>
							<td class="p-1">@collection[i].UnitNumber</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>

	@{
		var previousPage = Model.CurrentPage - 1;
		if (previousPage < 1)
		{
			previousPage = 1;
		}

		var maxPage = Math.Ceiling((double)Model.TotalElements /
		Model.ElementsPerPage);
	}

	@if (collection.Any())
	{
		<form aria-label="...">
			<ul class="pagination justify-content-center">
				<li class="page-item">
					<a class="page-link btn rounded-0 rounded-start-5 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
					   asp-area="" asp-controller="Finances"
					   asp-action="Index"
					   asp-route-houseOrgId="@houseOrgId"
					   asp-route-expensesCurrentPage="@Model.ExpensesCurrentPage"
					   asp-route-incomesCurrentPage="@previousPage">&laquo;</a>
				</li>

				@for (int i = 1; i <= maxPage; i++)
				{
					<li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)" aria-current="page">
						<a class="page-link"
						   asp-area="" asp-controller="Finances"
						   asp-action="Index"
						   asp-route-houseOrgId="@houseOrgId"
						   asp-route-expensesCurrentPage="@Model.ExpensesCurrentPage"
						   asp-route-incomesCurrentPage="@i">@i</a>
					</li>
				}

				@{
					var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
					!Model.Collection.Any();
				}
				<li class="page-item">
					<a class="page-link btn rounded-0 rounded-start-5 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
					   asp-area="" asp-controller="Finances"
					   asp-action="Index"
					   asp-route-houseOrgId="@houseOrgId"
					   asp-route-expensesCurrentPage="@Model.ExpensesCurrentPage"
					   asp-route-incomesCurrentPage="@(Model.CurrentPage + 1)">&raquo;</a>
				</li>
			</ul>
		</form>
	}
</div>
