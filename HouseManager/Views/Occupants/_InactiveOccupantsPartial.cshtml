@model InactiveOccupantsPageViewModel

@{
	var collection = Model.Collection;
}
<div class="card border-2 p-0 mb-3 col-12">
	<h4 class="card-header p-2 text-center">Inactive Occupants list</h4>
	<div class="card-body p-4">
		<div class="table-responsive">
			<table class="table table-bordered table-hover">
				<thead>
					<tr class="text-center border-2 bg-light align-middle p-1">
						<th style="width:5%" scope="col">#</th>
						<th style="width:40%" scope="col">Full Name</th>
						<th style="width:19%" scope="col">Phone Number</th>
						<th style="width:9%" scope="col">Owner</th>
						<th style="width:18%" scope="col">Left On</th>
						<th style="width:9%" scope="col">Details</th>
					</tr>
				</thead>
				<tbody class="align-middle">
					@for (int i = 0; i < collection.Count; i++)
					{
						<tr class="bg-white border-2 align-middle text-center">
							<td class="bg-light p-1" scope="row">@(i + 1)</td>
							<td class="p-1">@collection[i].FullName</td>
							<td class="p-1">@collection[i].PhoneNumber</td>
							<td class="p-1">@collection[i].IsOwner</td>
							<td class="p-1">@collection[i].LeaveDate</td>
							<td class="p-1">
								<button type="submit" class="btn  btn-outline-info rounded-bottom-circle p-0" style="width: 25px; height: 25px" asp-area="" asp-controller="Occupants" asp-action="Details" asp-route-id="@collection[i].Id"><i class="fa-solid fa-info"></i></button>
							</td>
						</tr>
					}
				</tbody>
			</table>
			@{
				var previousPage = Model.CurrentPage - 1;
				if (previousPage < 1)
				{
					previousPage = 1;
				}

				var maxPage = Math.Ceiling((double)Model.TotalElements /
				Model.ElementsPerPage);
			}

			@if (collection.Any())
			{
				<nav aria-label="...">
					<ul class="pagination justify-content-center">
						<li class="page-item">
							<a class="page-link btn rounded-0 rounded-start-5 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
							   asp-area="" asp-controller="Units"
							   asp-action="Details"
							   asp-route-activeCurrentPage="@Model.ActiveOccupantCurrentPage"
							   asp-route-inactiveCurrentPage="@previousPage">&laquo;</a>
						</li>

						@for (int i = 1; i <= maxPage; i++)
						{
							<li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)" aria-current="page">
								<a class="page-link"
								   asp-area="" asp-controller="Units"
								   asp-action="Details"
								   asp-route-activeCurrentPage="@Model.ActiveOccupantCurrentPage"
								   asp-route-inactiveCurrentPage="@i">@i</a>
							</li>
						}

						@{
							var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
							!Model.Collection.Any();
						}
						<li class="page-item">
							<a class="page-link btn rounded-0 rounded-start-5 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
							   asp-area="" asp-controller="Units"
							   asp-action="Details"
							   asp-route-activeCurrentPage="@Model.ActiveOccupantCurrentPage"
							   asp-route-inactiveCurrentPage="@(Model.CurrentPage + 1)">&raquo;</a>
						</li>
					</ul>
				</nav>
			}
		</div>
	</div>
</div>