@inject IHttpContextAccessor HttpContextAccessor
@using Microsoft.AspNetCore.Http.Extensions

@model HouseOrganizationDetailViewModel

@{
	ViewBag.Id = HttpContextAccessor.HttpContext.GetRouteValue("id") ?? string.Empty;
	var houseOrgId = HttpContextAccessor?.HttpContext?.Session.GetInt32(HouseOrgId) ?? 0;
	var name = Model.Name;
	var id = Model.Id;
	var units = Model.Units;
}

<h4 class="mb-4 text-center">@name - Details</h4>
<hr />
<div class="row row-cols-1 row-cols-lg-2 mb-5 justify-content-lg-around justify-content-center">
	<div class="col-12 col-lg-4 justify-content-center mb-3">
		<partial name="_DetailsHouseOrganizationPartial" model="@Model" />
		<form class="d-flex flex-wrap justify-content-center p-4">
			@if (Model.Id != houseOrgId)
			{
				<button asp-area="" asp-controller="HouseOrganizations"
						asp-action="Manage"
						asp-route-id="@Model.Id"
						class="btn btn-success d-fluid m-1">
					<i class="fa-solid fa-check me-2"></i>Manage
				</button>
			}
			<button asp-area="" asp-controller="HouseOrganizations"
					asp-action="Edit"
					asp-route-id="@Model.Id"
					class="btn btn-warning d-fluid m-1">
				<i class="fa-solid fa-pencil me-2"></i>Edit
			</button>
			<button type="button"
					class="btn btn-info d-fluid m-1"
					onclick="location.href='@Url.Action("All","HouseOrganizations")';">
				<i class="fa-regular fa-circle-left me-2"></i>Back
			</button>
		</form>
	</div>
	@if (houseOrgId == id)
	{
		<div class="row col-12 col-lg-7 justify-content-center mb-3">
			<partial name="~/Views/Units/_AllUnitsPartial.cshtml" model="@Model.Units" />
			@* @{
				var previousPage = units.CurrentPage - 1;
				if (previousPage < 1)
				{
					previousPage = 1;
				}

				var maxPage = Math.Ceiling((double)units.TotalElements /
				units.ElementsPerPage);
			}

			@if (units.Collection.Any())
			{

				<form aria-label="...">
					<ul class="pagination justify-content-center">
						<li class="page-item">
							<a class="page-link btn rounded-0 rounded-start-5 @(units.CurrentPage == 1 ? "disabled" : string.Empty)"
							   asp-area="" asp-controller="HouseOrganizations"
							   asp-action="Details"
							   asp-route-houseOrgId="@houseOrgId"
							   asp-route-currentPage="@previousPage">&laquo;</a>
						</li>

						@for (int i = 1; i <= maxPage; i++)
						{
							<li class="page-item @(units.CurrentPage == i ? "active" : string.Empty)" aria-current="page">
								<a class="page-link"
								   asp-area="" asp-controller="HouseOrganizations"
								   asp-action="Details"
								   asp-route-houseOrgId="@houseOrgId"
								   asp-route-currentPage="@i">@i</a>
							</li>
						}

						@{
							var shouldButtonBeDisabled = units.CurrentPage == maxPage ||
							!units.Collection.Any();
						}
						<li class="page-item">
							<a class="page-link btn rounded-0 rounded-end-2 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
							   asp-area="" asp-controller="HouseOrganizations"
							   asp-action="Details"
							   asp-route-houseOrgId="@houseOrgId"
							   asp-route-currentPage="@(units.CurrentPage + 1)">&raquo;</a>
						</li>
					</ul>
				</form>
			} *@
		</div>
	}
</div>