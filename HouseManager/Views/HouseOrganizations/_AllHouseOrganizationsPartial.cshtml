@inject IHttpContextAccessor HttpContextAccessor

@model HouseOrganizationsPageViewModel

@{
	var houseOrgId = HttpContextAccessor?.HttpContext?.Session.GetInt32(HouseOrgId) ?? default;
	var collection = Model.Collection;
}

<div class="card border-2 p-0 mb-5 mx-3 col-12">
	<h4 class="card-header p-2 text-center">All House Organizations</h4>
	<div class="card-body justify-content-center">
		<div class="table-responsive">
			<table class="table table-bordered table-hover">
				<thead>
					<tr class="text-center border-2 align-middle bg-light">
						<th style="width: 5%" scope="col">#</th>
						<th style="width: 25%" scope="col">Name</th>
						<th style="width: 40%" scope="col">Address</th>
						<th style="width: 15%" scope="col">Town</th>
						<th style="width: 5%" scope="col">Manage</th>
						<th style="width: 5%" scope="col">Details</th>
						<th style="width: 5%" scope="col">Edit</th>
					</tr>
				</thead>
				<tbody class="align-middle">
					@for (int i = 0; i < collection.Count(); i++)
					{
						<tr class="text-center border-2 bg-white">
							<td class="bg-light p-1" scope="row">@(i + 1)</td>
							<td class="p-1">@collection[i].Name</td>
							<td class="p-1">@collection[i].Address</td>
							<td class="p-1">@collection[i].Town</td>
							@if (collection[i].Id == houseOrgId)
							{
								<td class="p-1">
									<button class="btn btn-success rounded-bottom-circle p-0"
											style="width: 25px; height: 25px">
										<i class="fa-solid fa-check"></i>
									</button>
								</td>
							}
							else
							{
								<td class="p-1">
									<button asp-area="" asp-controller="HouseOrganizations"
											asp-action="Manage"
											asp-route-id="@collection[i].Id"
											class="btn btn-outline-secondary rounded-bottom-circle p-0"
											style="width: 25px; height: 25px">
										<i class="fa-solid fa-check"></i>
									</button>
								</td>
							}
							<td class="p-1">
								<button asp-area="" asp-controller="HouseOrganizations"
										asp-action="Details"
										asp-route-id="@collection[i].Id"
										type="submit"
										class="btn btn-outline-info rounded-bottom-circle p-0"
										style="width: 25px; height: 25px">
									<i class="fa-solid fa-info"></i>
								</button>
							</td>
							<td class="p-1">
								<button asp-area="" asp-controller="HouseOrganizations"
										asp-action="Edit"
										asp-route-id="@collection[i].Id"
										class="btn btn-outline-warning rounded-bottom-circle p-0"
										style="width: 25px; height: 25px">
									<i class="fa-solid fa-pencil"></i>
								</button>
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
	@{
		var previousPage = Model.CurrentPage - 1;
		if (previousPage < 1)
		{
			previousPage = 1;
		}

		var maxPage = Math.Ceiling((double)Model.TotalElements /
		Model.ElementsPerPage);
	}

	@if (collection.Any())
	{

		<form aria-label="...">
			<ul class="pagination justify-content-center">
				<li class="page-item">
					<a class="page-link btn rounded-0 rounded-start-5 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
					   asp-area="" asp-controller="HouseOrganizations"
					   asp-action="All"
					   asp-route-currentPage="@previousPage">&laquo;</a>
				</li>

				@for (int i = 1; i <= maxPage; i++)
				{
					<li class="page-item @(Model.CurrentPage == i ? "active" : string.Empty)" aria-current="page">
						<a class="page-link"
						   asp-area="" asp-controller="HouseOrganizations"
						   asp-action="All"
						   asp-route-currentPage="@i">@i</a>
					</li>
				}

				@{
					var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
					!collection.Any();
				}
				<li class="page-item">
					<a class="page-link btn rounded-0 rounded-end-2 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
					   asp-area="" asp-controller="HouseOrganizations"
					   asp-action="All"
					   asp-route-currentPage="@(Model.CurrentPage + 1)">&raquo;</a>
				</li>
			</ul>
		</form>
	}
</div>