// <auto-generated />
using System;
using HouseManager.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HouseManager.Infrastructure.Migrations
{
    [DbContext(typeof(HouseManagerDbContext))]
    [Migration("20241211060357_RemovedPetsCountFromUnit")]
    partial class RemovedPetsCountFromUnit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary key of the expense");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Amount of the expense");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Short description of the expense");

                    b.Property<int>("HouseOrganizationId")
                        .HasColumnType("int")
                        .HasComment("Primary identifier of the House Organization");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the payment is made");

                    b.Property<int>("SplitType")
                        .HasColumnType("int")
                        .HasComment("How the expense is spread");

                    b.HasKey("Id");

                    b.HasIndex("HouseOrganizationId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.HouseOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary identifier of the House Organization");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Address of the House Organization");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Total balance");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Creator of the House Organization");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Name of the House Organization");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasComment("Town of the House Organization");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("HouseOrganizations");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Income", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary identifier of the Income");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Amount of the Income");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasComment("Short description of the Income");

                    b.Property<int>("HouseOrganizationId")
                        .HasColumnType("int")
                        .HasComment("Primary identifier of the House Organization");

                    b.Property<DateTime>("IncomeDate")
                        .HasColumnType("datetime2")
                        .HasComment("Date of the Income");

                    b.Property<int>("IncomeType")
                        .HasColumnType("int")
                        .HasComment("Type of the Income");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasComment("Unit which provided the Income");

                    b.HasKey("Id");

                    b.HasIndex("HouseOrganizationId");

                    b.HasIndex("UnitId");

                    b.ToTable("Incomes");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HouseOrganizationId")
                        .HasColumnType("int")
                        .HasComment("Assigned to house organization");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("Current status");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Full name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Phone number");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasComment("Position");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasComment("Start date of assignment to the position");

                    b.Property<int>("TermPeriod")
                        .HasColumnType("int")
                        .HasComment("Due date of assignment to the position");

                    b.Property<DateTime>("TerminationDate")
                        .HasColumnType("datetime2")
                        .HasComment("Date on which the term is ended");

                    b.HasKey("Id");

                    b.HasIndex("HouseOrganizationId");

                    b.ToTable("Managers");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Occupant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary identifier of the occupant");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2")
                        .HasComment("Occupant date of birth");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasComment("Occupant full name");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasComment("Occupation status");

                    b.Property<bool>("IsOwner")
                        .HasColumnType("bit")
                        .HasComment("Flag if the occupant is owner of the unit");

                    b.Property<DateTime>("LeaveDate")
                        .HasColumnType("datetime2")
                        .HasComment("End date of the occupation");

                    b.Property<DateTime>("OccupationDate")
                        .HasColumnType("datetime2")
                        .HasComment("Start date of the occupation");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Phone number of the occupant");

                    b.Property<int>("UnitId")
                        .HasColumnType("int")
                        .HasComment("Unit to which occupant is assigned");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Occupants");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Primary identifier of the unit");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("The credit/debit of the unit");

                    b.Property<decimal>("CommonParts")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Common parts adjacent to the unit");

                    b.Property<int>("Floor")
                        .HasColumnType("int")
                        .HasComment("Floor on which the unit is located");

                    b.Property<int>("HouseOrganizationId")
                        .HasColumnType("int")
                        .HasComment("Identifier of the unit type");

                    b.Property<decimal>("TotalArea")
                        .HasColumnType("decimal(18,2)")
                        .HasComment("Total area of the unit");

                    b.Property<string>("UnitNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Number of the unit");

                    b.Property<int>("UnitType")
                        .HasColumnType("int")
                        .HasComment("Type of the unit");

                    b.HasKey("Id");

                    b.HasIndex("HouseOrganizationId");

                    b.HasIndex("UnitNumber", "HouseOrganizationId")
                        .IsUnique();

                    b.ToTable("Units");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "922709d0-1897-4329-a22e-f7c0ec567655",
                            Name = "Administrator"
                        },
                        new
                        {
                            Id = "614a391e-56ae-45c1-93ce-f9f1107b9d77",
                            Name = "President"
                        },
                        new
                        {
                            Id = "197dd126-b897-4fe4-b3d2-87167478513e",
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = "e99a4168-541e-43ad-974e-235c14c9f42a",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Expense", b =>
                {
                    b.HasOne("HouseManager.Infrastructure.Data.Models.HouseOrganization", "HouseOrganization")
                        .WithMany("Expenses")
                        .HasForeignKey("HouseOrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HouseOrganization");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.HouseOrganization", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Income", b =>
                {
                    b.HasOne("HouseManager.Infrastructure.Data.Models.HouseOrganization", "HouseOrganization")
                        .WithMany("Incomes")
                        .HasForeignKey("HouseOrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HouseManager.Infrastructure.Data.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HouseOrganization");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Manager", b =>
                {
                    b.HasOne("HouseManager.Infrastructure.Data.Models.HouseOrganization", "HouseOrganization")
                        .WithMany("Managers")
                        .HasForeignKey("HouseOrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HouseOrganization");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Occupant", b =>
                {
                    b.HasOne("HouseManager.Infrastructure.Data.Models.Unit", "Unit")
                        .WithMany("Occupants")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Unit", b =>
                {
                    b.HasOne("HouseManager.Infrastructure.Data.Models.HouseOrganization", "HouseOrganization")
                        .WithMany("Units")
                        .HasForeignKey("HouseOrganizationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HouseOrganization");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.HouseOrganization", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("Incomes");

                    b.Navigation("Managers");

                    b.Navigation("Units");
                });

            modelBuilder.Entity("HouseManager.Infrastructure.Data.Models.Unit", b =>
                {
                    b.Navigation("Occupants");
                });
#pragma warning restore 612, 618
        }
    }
}
